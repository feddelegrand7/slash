[{"path":[]},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement ihaddaden.fodeil@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://feddelegrand7.github.io/slash/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://feddelegrand7.github.io/slash/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 slash authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://feddelegrand7.github.io/slash/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mohamed El Fodil Ihaddaden. Author, maintainer.","code":""},{"path":"https://feddelegrand7.github.io/slash/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ihaddaden M (2025). slash: Path-Based Access Manipulation Nested Lists. R package version 0.1.0, https://github.com/feddelegrand7/slash.","code":"@Manual{,   title = {slash: Path-Based Access and Manipulation of Nested Lists},   author = {Mohamed El Fodil Ihaddaden},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/feddelegrand7/slash}, }"},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"slash-","dir":"","previous_headings":"","what":"Path-Based Access and Manipulation of Nested Lists","title":"Path-Based Access and Manipulation of Nested Lists","text":"goal slash provide hierarchical key-value store elements can accessed modified using simple path-like strings, \"cars/1/model\" \"garage/vw/golf/color\". supports: Named unnamed lists Nested access / paths Optional strict mode List path enumeration Full get/set/delete API","code":""},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Path-Based Access and Manipulation of Nested Lists","text":"can install slash CRAN : can install development version slash like :","code":"install.packages(\"slash\") devtools::install_github(\"feddelegrand7/slash\")"},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"getting-elements-from-a-list","dir":"","previous_headings":"","what":"Getting elements from a list","title":"Path-Based Access and Manipulation of Nested Lists","text":"Consider following list object: one wants access manufacturer element, one can : Using slash, can access element using file-path syntax: slash can operate unnamed elements like /named elements like following: Let’s say want access color VW Golf. standard R one can : Using slash, can operate following: now, example, want access properties Golf car, : possible return whole list needed using get_all method: ’ll also get whole list element NULL (default) provided get method: try access element exist, ’ll get NULL returned value: can change behavior get error back element found using strict parameter. can set parameter initialization instance: afterward, using set_strict method: way, get error back element found:","code":"cars_list <- list(   cars = list(     list(manufacturer = \"VW\", model = \"Golf V\", year = 2005),     list(manufacturer = \"Toyota\", model = \"Corolla\", year = 2010),     list(manufacturer = \"Tesla\", model = \"Model S\", year = 2022)   ) ) cars_list$cars[[1]]$manufacturer #> [1] \"VW\" library(slash)  sl <- slash$new(data = cars_list)  sl$get(path = \"cars/1/manufacturer\") #> [1] \"VW\" garage <- list(   vw = list(     golf = list(year = 2005, color = \"black\"),     passat = list(year = 2011)   ),   toyota = list(     corolla = list(year = 2010)   ) ) garage$vw$golf$color #> [1] \"black\" sl <- slash$new(data = garage) sl$get(\"vw/golf/color\") #> [1] \"black\" sl <- slash$new(data = garage) sl$get(\"vw/golf\") #> $year #> [1] 2005 #>  #> $color #> [1] \"black\" sl$get_all() #> $vw #> $vw$golf #> $vw$golf$year #> [1] 2005 #>  #> $vw$golf$color #> [1] \"black\" #>  #>  #> $vw$passat #> $vw$passat$year #> [1] 2011 #>  #>  #>  #> $toyota #> $toyota$corolla #> $toyota$corolla$year #> [1] 2010 sl$get(NULL) #> $vw #> $vw$golf #> $vw$golf$year #> [1] 2005 #>  #> $vw$golf$color #> [1] \"black\" #>  #>  #> $vw$passat #> $vw$passat$year #> [1] 2011 #>  #>  #>  #> $toyota #> $toyota$corolla #> $toyota$corolla$year #> [1] 2010 sl$get(\"vw/polo\") #> NULL sl <- slash$new(data = garage, strict = TRUE) sl$set_strict(strict = TRUE) sl$get(\"vw/polo\") #> Error in sl$get(\"vw/polo\"): Element at path 'vw/polo' does not exist"},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"setting-elements-in-a-list","dir":"","previous_headings":"","what":"Setting elements in a list","title":"Path-Based Access and Manipulation of Nested Lists","text":"can change value element add new element within list using set method, suppose want add new car previous list: Now, want modify year 2013 2023 example, can : can even build list element scrath:","code":"sl$set(path = \"vw/polo/year\", value = 2013) sl$set(path = \"vw/polo/color\", value = \"Steelblue\")  sl$get(\"vw\") #> $golf #> $golf$year #> [1] 2005 #>  #> $golf$color #> [1] \"black\" #>  #>  #> $passat #> $passat$year #> [1] 2011 #>  #>  #> $polo #> $polo$year #> [1] 2013 #>  #> $polo$color #> [1] \"Steelblue\" sl$set(path = \"vw/polo/year\", value = 2023) sl$get(\"vw\") #> $golf #> $golf$year #> [1] 2005 #>  #> $golf$color #> [1] \"black\" #>  #>  #> $passat #> $passat$year #> [1] 2011 #>  #>  #> $polo #> $polo$year #> [1] 2023 #>  #> $polo$color #> [1] \"Steelblue\" sl <- slash$new() sl$get() #> list() sl$set(\"vw/golf/year\", value = 2005) sl$set(\"vw/golf/color\", value = \"black\") sl$set(\"vw/passat/year\", value = 2011) sl$set(\"vw/polo/year\", value = \"Steelblue\") sl$set(\"vw/polo/color\", value = 2023)  sl$get(\"vw\") #> $golf #> $golf$year #> [1] 2005 #>  #> $golf$color #> [1] \"black\" #>  #>  #> $passat #> $passat$year #> [1] 2011 #>  #>  #> $polo #> $polo$year #> [1] \"Steelblue\" #>  #> $polo$color #> [1] 2023"},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"deleting-an-element-from-the-list","dir":"","previous_headings":"","what":"Deleting an element from the list","title":"Path-Based Access and Manipulation of Nested Lists","text":"can delete element using delete method, suppose don’t need polo car element anymore, : can delete level list, example want delete color field golf element, :","code":"sl$delete(\"vw/polo\") sl$get(\"vw\") #> $golf #> $golf$year #> [1] 2005 #>  #> $golf$color #> [1] \"black\" #>  #>  #> $passat #> $passat$year #> [1] 2011 sl$delete(\"vw/golf/color\") sl$get(\"vw\") #> $golf #> $golf$year #> [1] 2005 #>  #>  #> $passat #> $passat$year #> [1] 2011"},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"listing-the-available-paths","dir":"","previous_headings":"","what":"Listing the available paths","title":"Path-Based Access and Manipulation of Nested Lists","text":"want list available paths list object, can call list_paths() method:","code":"sl$list_paths() #> [1] \"vw\"             \"vw/golf\"        \"vw/golf/year\"   \"vw/passat\"      #> [5] \"vw/passat/year\""},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"check-if-an-element-exists","dir":"","previous_headings":"","what":"Check if an element exists:","title":"Path-Based Access and Manipulation of Nested Lists","text":"Use exists method check particular path exists:","code":"sl$exists(\"vw\") #> [1] TRUE sl$exists(\"vw/golf\") #> [1] TRUE sl$exists(\"vw/golf/color\") #> [1] FALSE sl$exists(\"porshe/911\") #> [1] FALSE"},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"printing-a-slash-object","dir":"","previous_headings":"","what":"Printing a slash object","title":"Path-Based Access and Manipulation of Nested Lists","text":"slash object particular print method attached , prints nice view available paths among information (strict mode):","code":"sl$print() #> slash object (non-strict mode) #> Use $get() or $get_all() to view contents #> Available Paths: #> - vw #> - vw/golf #> - vw/golf/year #> - vw/passat #> - vw/passat/year"},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"printing-the-list-object","dir":"","previous_headings":"","what":"Printing the list object","title":"Path-Based Access and Manipulation of Nested Lists","text":"slash object build top list object, want print list -self, use print_list method:","code":"sl$print_list() #> list(vw = list(golf = list(year = 2005), passat = list(year = 2011)))"},{"path":"https://feddelegrand7.github.io/slash/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Path-Based Access and Manipulation of Nested Lists","text":"Please note slash project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":null,"dir":"Reference","previous_headings":"","what":"Path-based access and manipulation for R lists — slash","title":"Path-based access and manipulation for R lists — slash","text":"Path-based access manipulation R lists Path-based access manipulation R lists","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Path-based access and manipulation for R lists — slash","text":"slash class provides tools working hierarchical R lists using path-like strings (e.g., \"/b/c\"). Rather creating new data structure, adds convenient path-based access methods standard R lists, supporting: - named numeric (1-based) indexing - Strict mode error checking - Various operations list manipulation","code":""},{"path":[]},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Path-based access and manipulation for R lists — slash","text":"slash$new() slash$get() slash$set() slash$exists() slash$delete() slash$clear() slash$get_all() slash$print() slash$print_list() slash$list_paths() slash$is_strict() slash$set_strict() slash$clone()","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Path-based access and manipulation for R lists — slash","text":"Create new slash object","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$new(data = list(), strict = FALSE)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"data Initial data (must list) strict TRUE, attempts access non-existent paths error","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"new `slash` object","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"Path-based access and manipulation for R lists — slash","text":"Get value specified path","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$get(path = NULL, default = NULL)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"path Path element (e.g., \"/b/c\" \"1/2/3\") default Value return path exist (NULL default)","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"value specified path, default found","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-set-","dir":"Reference","previous_headings":"","what":"Method set()","title":"Path-based access and manipulation for R lists — slash","text":"Set value specified path","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$set(path, value)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"path Path element value Value set","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"slash object (invisibly) chaining","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-exists-","dir":"Reference","previous_headings":"","what":"Method exists()","title":"Path-based access and manipulation for R lists — slash","text":"Check path exists","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$exists(path)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"path Path check","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"TRUE path exists, FALSE otherwise","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"Path-based access and manipulation for R lists — slash","text":"Delete element specified path","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$delete(path)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"path Path delete","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"slash object (invisibly) chaining","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Path-based access and manipulation for R lists — slash","text":"Clear data","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$clear()"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"slash object (invisibly) chaining","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-get-all-","dir":"Reference","previous_headings":"","what":"Method get_all()","title":"Path-based access and manipulation for R lists — slash","text":"Get data list","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$get_all()"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"complete data structure","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Path-based access and manipulation for R lists — slash","text":"Print summary slash object","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$print(show_full = FALSE)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"show_full TRUE, shows full structure (FALSE default)","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-print-list-","dir":"Reference","previous_headings":"","what":"Method print_list()","title":"Path-based access and manipulation for R lists — slash","text":"Print list structure path","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$print_list(path = NULL)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"path Path print (NULL root)","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-list-paths-","dir":"Reference","previous_headings":"","what":"Method list_paths()","title":"Path-based access and manipulation for R lists — slash","text":"List available paths","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$list_paths()"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"Character vector paths data structure","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-is-strict-","dir":"Reference","previous_headings":"","what":"Method is_strict()","title":"Path-based access and manipulation for R lists — slash","text":"Check strict mode","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$is_strict()"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"TRUE strict mode, FALSE otherwise","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-set-strict-","dir":"Reference","previous_headings":"","what":"Method set_strict()","title":"Path-based access and manipulation for R lists — slash","text":"Set strict mode","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$set_strict(strict)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"strict Logical value strict mode","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Path-based access and manipulation for R lists — slash","text":"slash object (invisibly) chaining","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Path-based access and manipulation for R lists — slash","text":"objects class cloneable method.","code":""},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Path-based access and manipulation for R lists — slash","text":"","code":"slash$clone(deep = FALSE)"},{"path":"https://feddelegrand7.github.io/slash/reference/slash.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path-based access and manipulation for R lists — slash","text":"deep Whether make deep clone.","code":""},{"path":"https://feddelegrand7.github.io/slash/news/index.html","id":"slash-010","dir":"Changelog","previous_headings":"","what":"slash 0.1.0","title":"slash 0.1.0","text":"CRAN release: 2025-04-18 Initial release.","code":""}]
